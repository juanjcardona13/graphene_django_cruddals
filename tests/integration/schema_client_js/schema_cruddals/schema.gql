input ModelAInput {
  id: ID
  binaryFieldRequired: Binary
  binaryFieldNullable: Binary
  binaryFieldWithDefault: Binary

  """binary_field_with_description"""
  binaryFieldWithDescription: Binary
  booleanFieldRequired: Boolean
  booleanFieldNullable: Boolean
  booleanFieldWithDefault: Boolean

  """boolean_field_with_description"""
  booleanFieldWithDescription: Boolean
  charFieldRequired: String
  charFieldNullable: String
  charFieldWithDefault: String

  """char_field_with_description"""
  charFieldWithDescription: String
  choiceFieldRequired: SimplecruddalsmodelModelAChoiceFieldRequiredChoices
  choiceFieldNullable: SimplecruddalsmodelModelAChoiceFieldNullableChoices
  choiceFieldWithDefault: SimplecruddalsmodelModelAChoiceFieldWithDefaultChoices

  """choice_field_with_description"""
  choiceFieldWithDescription: SimplecruddalsmodelModelAChoiceFieldWithDescriptionChoices
  dateFieldRequired: Date
  dateFieldNullable: Date

  """date_field_with_description"""
  dateFieldWithDescription: Date
  dateTimeFieldRequired: DateTime
  dateTimeFieldNullable: DateTime

  """date_time_field_with_description"""
  dateTimeFieldWithDescription: DateTime
  timeFieldRequired: Time
  timeFieldNullable: Time

  """time_field_with_description"""
  timeFieldWithDescription: Time
  decimalFieldRequired: Decimal
  decimalFieldNullable: Decimal
  decimalFieldWithDefault: Decimal

  """decimal_field_with_description"""
  decimalFieldWithDescription: Decimal
  durationFieldRequired: Duration
  durationFieldNullable: Duration
  durationFieldWithDefault: Duration

  """duration_field_with_description"""
  durationFieldWithDescription: Duration
  emailFieldRequired: Email
  emailFieldNullable: Email
  emailFieldWithDefault: Email

  """email_field_with_description"""
  emailFieldWithDescription: Email
  floatFieldRequired: Float
  floatFieldNullable: Float
  floatFieldWithDefault: Float

  """float_field_with_description"""
  floatFieldWithDescription: Float
  integerFieldRequired: Int
  integerFieldNullable: Int
  integerFieldWithDefault: Int

  """integer_field_with_description"""
  integerFieldWithDescription: Int
  smallIntegerFieldRequired: Int
  smallIntegerFieldNullable: Int
  smallIntegerFieldWithDefault: Int

  """small_integer_field_with_description"""
  smallIntegerFieldWithDescription: Int
  positiveIntegerFieldRequired: PositiveInt
  positiveIntegerFieldNullable: PositiveInt
  positiveIntegerFieldWithDefault: PositiveInt

  """positive_integer_field_with_description"""
  positiveIntegerFieldWithDescription: PositiveInt
  slugFieldRequired: Slug
  slugFieldNullable: Slug
  slugFieldWithDefault: Slug

  """slug_field_with_description"""
  slugFieldWithDescription: Slug
  textFieldRequired: String
  textFieldNullable: String
  textFieldWithDefault: String

  """text_field_with_description"""
  textFieldWithDescription: String
  urlFieldRequired: URL
  urlFieldNullable: URL
  urlFieldWithDefault: URL

  """url_field_with_description"""
  urlFieldWithDescription: URL
  uuidFieldRequired: UUID
  uuidFieldNullable: UUID
  uuidFieldWithDefault: UUID

  """uuid_field_with_description"""
  uuidFieldWithDescription: UUID
  foreignKeyFieldRequired: ID
  foreignKeyFieldNullable: ID

  """foreign_key_field_with_description"""
  foreignKeyFieldWithDescription: ID
  foreignKeyFieldWithoutRelatedName: ID
  oneToOneFieldRequired: ID
  oneToOneFieldNullable: ID

  """one_to_one_field_with_description"""
  oneToOneFieldWithDescription: ID
  oneToOneFieldWithoutRelatedName: ID

  """The content type"""
  contentType: ID

  """The object id"""
  objectId: PositiveInt
  manyToManyFieldRequired: [ID]
  manyToManyFieldNullable: [ID]

  """many_to_many_field_with_description"""
  manyToManyFieldWithDescription: [ID]
  manyToManyFieldWithoutRelatedName: [ID]
}

"""BinaryArray is used to convert a Django BinaryField to the string form"""
scalar Binary

"""An enumeration."""
enum SimplecruddalsmodelModelAChoiceFieldRequiredChoices {
  """A"""
  A

  """B"""
  B
}

"""An enumeration."""
enum SimplecruddalsmodelModelAChoiceFieldNullableChoices {
  """A"""
  A

  """B"""
  B
}

"""An enumeration."""
enum SimplecruddalsmodelModelAChoiceFieldWithDefaultChoices {
  """A"""
  A

  """B"""
  B
}

"""An enumeration."""
enum SimplecruddalsmodelModelAChoiceFieldWithDescriptionChoices {
  """A"""
  A

  """B"""
  B
}

"""
The `Date` scalar type represents a Date
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar Date

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

"""
The `Time` scalar type represents a Time value as
specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar Time

"""The `Decimal` scalar type represents a python Decimal."""
scalar Decimal

"""
Duration fields in Django are stored as timedelta in Python,
and as a duration in the Database. We will represent them as
a total number of seconds in GraphQL.
"""
scalar Duration

"""
A field whose value conforms to the standard
internet email address format as specified in
HTML Spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address.
"""
scalar Email

"""Integers that will have a value of 0 or more."""
scalar PositiveInt

"""
Slug is a newspaper term. A slug is a short label for something, containing only letters, numbers, underscores or hyphens. Theyâ€™re generally used in URLs.
"""
scalar Slug

"""
A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
"""
scalar URL

"""
Leverages the internal Python implementation of UUID (uuid.UUID) to provide native UUID objects
in fields, resolvers and input.
"""
scalar UUID

type Query {
  readModelE(where: FilterModelEInput!): ModelEType
  searchModelEs(where: FilterModelEInput, orderBy: OrderByModelEInput, paginated: PaginationConfigInput): ModelEPaginatedType
  listModelEs: [ModelEType!]
  readModelD(where: FilterModelDInput!): ModelDType
  searchModelDs(where: FilterModelDInput, orderBy: OrderByModelDInput, paginated: PaginationConfigInput): ModelDPaginatedType
  listModelDs: [ModelDType!]
  readModelC(where: FilterModelCInput!): ModelCType
  searchModelCs(where: FilterModelCInput, orderBy: OrderByModelCInput, paginated: PaginationConfigInput): ModelCPaginatedType
  listModelCs: [ModelCType!]
  readModelB(where: FilterModelBInput!): ModelBType
  searchModelBs(where: FilterModelBInput, orderBy: OrderByModelBInput, paginated: PaginationConfigInput): ModelBPaginatedType
  listModelBs: [ModelBType!]
  readModelA(where: FilterModelAInput!): ModelAType
  searchModelAs(where: FilterModelAInput, orderBy: OrderByModelAInput, paginated: PaginationConfigInput): ModelAPaginatedType
  listModelAs: [ModelAType!]
}

type ModelEType {
  id: ID
  foreignKeyFieldDeep: ModelDType
}

type ModelDType {
  id: ID
  foreignKeyField: ModelCType
  oneToOneCRelated: ModelCType
  paginatedManyToManyCRelated(where: FilterModelCInput, orderBy: OrderByModelCInput, paginated: PaginationConfigInput): ModelCPaginatedType
  paginatedForeignKeyERelated(where: FilterModelEInput, orderBy: OrderByModelEInput, paginated: PaginationConfigInput): ModelEPaginatedType
}

type ModelCType {
  id: ID
  charField: String!
  integerField: Int
  booleanField: Boolean
  dateTimeField: DateTime
  jsonField: JSONString
  fileField: String
  oneToOneField: ModelDType
  isActive: Boolean
  paginatedManyToManyField(where: FilterModelDInput, orderBy: OrderByModelDInput, paginated: PaginationConfigInput): ModelDPaginatedType
  paginatedForeignKeyDRelated(where: FilterModelDInput, orderBy: OrderByModelDInput, paginated: PaginationConfigInput): ModelDPaginatedType
}

"""
Allows use of a JSON String for input / output from the GraphQL schema.

Use of this type is *not recommended* as you lose the benefits of having a defined, static
schema (one of the key benefits of GraphQL).
"""
scalar JSONString

type ModelDPaginatedType implements PaginationInterface {
  total: Int
  page: Int
  pages: Int
  hasNext: Boolean
  hasPrev: Boolean
  indexStartObj: Int
  indexEndObj: Int
  objects: [ModelDType!]
}

interface PaginationInterface {
  total: Int
  page: Int
  pages: Int
  hasNext: Boolean
  hasPrev: Boolean
  indexStartObj: Int
  indexEndObj: Int
}

input FilterModelDInput {
  id: IDFilter
  foreignKeyField: FilterModelCInput
  oneToOneCRelated: FilterModelCInput
  manyToManyCRelated: FilterModelCInput
  foreignKeyERelated: FilterModelEInput
  AND: [FilterModelDInput]
  OR: [FilterModelDInput]
  NOT: FilterModelDInput
}

input IDFilter {
  exact: ID
  iexact: ID
  gt: ID
  gte: ID
  lt: ID
  lte: ID
  in: [ID]
  contains: ID
  icontains: ID
  startswith: ID
  istartswith: ID
  endswith: ID
  iendswith: ID
  range: [ID]
  isnull: Boolean
  regex: String
  iregex: String
}

input FilterModelCInput {
  id: IDFilter
  charField: StringFilter
  integerField: IntFilter
  booleanField: BooleanFilter
  dateTimeField: DateTimeFilter
  jsonField: JSONStringFilter
  fileField: StringFilter
  oneToOneField: FilterModelDInput
  isActive: BooleanFilter
  manyToManyField: FilterModelDInput
  foreignKeyDRelated: FilterModelDInput
  AND: [FilterModelCInput]
  OR: [FilterModelCInput]
  NOT: FilterModelCInput
}

input StringFilter {
  exact: String
  iexact: String
  gt: String
  gte: String
  lt: String
  lte: String
  in: [String]
  contains: String
  icontains: String
  startswith: String
  istartswith: String
  endswith: String
  iendswith: String
  range: [String]
  isnull: Boolean
  regex: String
  iregex: String
}

input IntFilter {
  exact: Int
  iexact: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  in: [Int]
  contains: Int
  icontains: Int
  startswith: Int
  istartswith: Int
  endswith: Int
  iendswith: Int
  range: [Int]
  isnull: Boolean
  regex: String
  iregex: String
}

input BooleanFilter {
  exact: Boolean
  iexact: Boolean
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  in: [Boolean]
  contains: Boolean
  icontains: Boolean
  startswith: Boolean
  istartswith: Boolean
  endswith: Boolean
  iendswith: Boolean
  range: [Boolean]
  isnull: Boolean
  regex: String
  iregex: String
}

input DateTimeFilter {
  exact: DateTime
  iexact: DateTime
  gt: DateTime
  gte: DateTime
  lt: DateTime
  lte: DateTime
  in: [DateTime]
  contains: DateTime
  icontains: DateTime
  startswith: DateTime
  istartswith: DateTime
  endswith: DateTime
  iendswith: DateTime
  range: [DateTime]
  isnull: Boolean
  regex: String
  iregex: String
  year: DateTime
  month: DateTime
  day: DateTime
  weekDay: DateTime
  isoWeekDay: DateTime
  week: DateTime
  isoYear: DateTime
  quarter: DateTime
  hour: DateTime
  minute: DateTime
  second: DateTime
  date: DateTime
  time: DateTime
}

input JSONStringFilter {
  exact: JSONString
  iexact: JSONString
  gt: JSONString
  gte: JSONString
  lt: JSONString
  lte: JSONString
  in: [JSONString]
  contains: JSONString
  icontains: JSONString
  startswith: JSONString
  istartswith: JSONString
  endswith: JSONString
  iendswith: JSONString
  range: [JSONString]
  isnull: Boolean
  regex: String
  iregex: String
  containedBy: JSONString
  hasKey: JSONString
  hasKeys: JSONString
  hasAnyKeys: JSONString
}

input FilterModelEInput {
  id: IDFilter
  foreignKeyFieldDeep: FilterModelDInput
  AND: [FilterModelEInput]
  OR: [FilterModelEInput]
  NOT: FilterModelEInput
}

input OrderByModelDInput {
  id: OrderEnum
  foreignKeyField: OrderByModelCInput
  oneToOneCRelated: OrderByModelCInput
}

enum OrderEnum {
  ASC
  DESC
}

input OrderByModelCInput {
  id: OrderEnum
  charField: OrderStringEnum
  integerField: OrderEnum
  booleanField: OrderEnum
  dateTimeField: OrderEnum
  fileField: OrderEnum
  oneToOneField: OrderByModelDInput
  isActive: OrderEnum
}

enum OrderStringEnum {
  ASC
  DESC
  IASC
  IDESC
}

input PaginationConfigInput {
  page: Int = 1
  itemsPerPage: IntOrAll = "All"
}

"""The page size can be int or 'All'"""
scalar IntOrAll

type ModelCPaginatedType implements PaginationInterface {
  total: Int
  page: Int
  pages: Int
  hasNext: Boolean
  hasPrev: Boolean
  indexStartObj: Int
  indexEndObj: Int
  objects: [ModelCType!]
}

type ModelEPaginatedType implements PaginationInterface {
  total: Int
  page: Int
  pages: Int
  hasNext: Boolean
  hasPrev: Boolean
  indexStartObj: Int
  indexEndObj: Int
  objects: [ModelEType!]
}

input OrderByModelEInput {
  id: OrderEnum
  foreignKeyFieldDeep: OrderByModelDInput
}

type ModelBType {
  id: ID
  foreignKeyField: ModelAType!
  oneToOneField: ModelAType!
  paginatedManyToManyField(where: FilterModelAInput, orderBy: OrderByModelAInput, paginated: PaginationConfigInput): ModelAPaginatedType
}

type ModelAType {
  id: ID
  binaryFieldRequired: Binary!
  binaryFieldNotEditable: Binary!
  binaryFieldNullable: Binary
  binaryFieldWithDefault: Binary

  """binary_field_with_description"""
  binaryFieldWithDescription: Binary!
  booleanFieldRequired: Boolean!
  booleanFieldNotEditable: Boolean!
  booleanFieldNullable: Boolean
  booleanFieldWithDefault: Boolean

  """boolean_field_with_description"""
  booleanFieldWithDescription: Boolean!
  charFieldRequired: String!
  charFieldNotEditable: String!
  charFieldNullable: String
  charFieldWithDefault: String

  """char_field_with_description"""
  charFieldWithDescription: String!
  choiceFieldRequired: SimplecruddalsmodelModelAChoiceFieldRequiredChoices!
  choiceFieldNotEditable: SimplecruddalsmodelModelAChoiceFieldNotEditableChoices!
  choiceFieldNullable: SimplecruddalsmodelModelAChoiceFieldNullableChoices
  choiceFieldWithDefault: SimplecruddalsmodelModelAChoiceFieldWithDefaultChoices

  """choice_field_with_description"""
  choiceFieldWithDescription: SimplecruddalsmodelModelAChoiceFieldWithDescriptionChoices!
  dateFieldRequired: Date!
  dateFieldNotEditable: Date!
  dateFieldNullable: Date
  dateFieldWithDefault: Date

  """date_field_with_description"""
  dateFieldWithDescription: Date!
  dateTimeFieldRequired: DateTime!
  dateTimeFieldNotEditable: DateTime!
  dateTimeFieldNullable: DateTime
  dateTimeFieldWithDefault: DateTime

  """date_time_field_with_description"""
  dateTimeFieldWithDescription: DateTime!
  timeFieldRequired: Time!
  timeFieldNotEditable: Time!
  timeFieldNullable: Time
  timeFieldWithDefault: Time

  """time_field_with_description"""
  timeFieldWithDescription: Time!
  decimalFieldRequired: Decimal!
  decimalFieldNotEditable: Decimal!
  decimalFieldNullable: Decimal
  decimalFieldWithDefault: Decimal

  """decimal_field_with_description"""
  decimalFieldWithDescription: Decimal!
  durationFieldRequired: Duration!
  durationFieldNotEditable: Duration!
  durationFieldNullable: Duration
  durationFieldWithDefault: Duration

  """duration_field_with_description"""
  durationFieldWithDescription: Duration!
  emailFieldRequired: Email!
  emailFieldNotEditable: Email!
  emailFieldNullable: Email
  emailFieldWithDefault: Email

  """email_field_with_description"""
  emailFieldWithDescription: Email!
  floatFieldRequired: Float!
  floatFieldNotEditable: Float!
  floatFieldNullable: Float
  floatFieldWithDefault: Float

  """float_field_with_description"""
  floatFieldWithDescription: Float!
  integerFieldRequired: Int!
  integerFieldNotEditable: Int!
  integerFieldNullable: Int
  integerFieldWithDefault: Int

  """integer_field_with_description"""
  integerFieldWithDescription: Int!
  smallIntegerFieldRequired: Int!
  smallIntegerFieldNotEditable: Int!
  smallIntegerFieldNullable: Int
  smallIntegerFieldWithDefault: Int

  """small_integer_field_with_description"""
  smallIntegerFieldWithDescription: Int!
  positiveIntegerFieldRequired: PositiveInt!
  positiveIntegerFieldNotEditable: PositiveInt!
  positiveIntegerFieldNullable: PositiveInt
  positiveIntegerFieldWithDefault: PositiveInt

  """positive_integer_field_with_description"""
  positiveIntegerFieldWithDescription: PositiveInt!
  slugFieldRequired: Slug!
  slugFieldNotEditable: Slug!
  slugFieldNullable: Slug
  slugFieldWithDefault: Slug

  """slug_field_with_description"""
  slugFieldWithDescription: Slug!
  textFieldRequired: String!
  textFieldNotEditable: String!
  textFieldNullable: String
  textFieldWithDefault: String

  """text_field_with_description"""
  textFieldWithDescription: String!
  urlFieldRequired: URL!
  urlFieldNotEditable: URL!
  urlFieldNullable: URL
  urlFieldWithDefault: URL

  """url_field_with_description"""
  urlFieldWithDescription: URL!
  uuidFieldRequired: UUID!
  uuidFieldNotEditable: UUID!
  uuidFieldNullable: UUID
  uuidFieldWithDefault: UUID

  """uuid_field_with_description"""
  uuidFieldWithDescription: UUID!
  foreignKeyFieldRequired: ModelAType!
  foreignKeyFieldNullable: ModelAType

  """foreign_key_field_with_description"""
  foreignKeyFieldWithDescription: ModelAType!
  foreignKeyFieldWithoutRelatedName: ModelAType!
  oneToOneFieldRequired: ModelAType!
  oneToOneFieldNullable: ModelAType

  """one_to_one_field_with_description"""
  oneToOneFieldWithDescription: ModelAType!
  oneToOneFieldWithoutRelatedName: ModelAType!

  """The object id"""
  objectId: PositiveInt
  paginatedManyToManyFieldRequired(where: FilterModelAInput, orderBy: OrderByModelAInput, paginated: PaginationConfigInput): ModelAPaginatedType
  paginatedManyToManyFieldNullable(where: FilterModelAInput, orderBy: OrderByModelAInput, paginated: PaginationConfigInput): ModelAPaginatedType

  """many_to_many_field_with_description"""
  paginatedManyToManyFieldWithDescription(where: FilterModelAInput, orderBy: OrderByModelAInput, paginated: PaginationConfigInput): ModelAPaginatedType
  paginatedManyToManyFieldWithoutRelatedName(where: FilterModelAInput, orderBy: OrderByModelAInput, paginated: PaginationConfigInput): ModelAPaginatedType
  genericForeignKeyField: ModelAGenericForeignKeyFieldUnionType
  paginatedGenericRelationField(where: FilterModelAInput, orderBy: OrderByModelAInput, paginated: PaginationConfigInput): ModelAPaginatedType
  paginatedForeignKeyRelated(where: FilterModelAInput, orderBy: OrderByModelAInput, paginated: PaginationConfigInput): ModelAPaginatedType
  paginatedForeignKeyNullableRelated(where: FilterModelAInput, orderBy: OrderByModelAInput, paginated: PaginationConfigInput): ModelAPaginatedType

  """foreign_key_field_with_description"""
  paginatedForeignKeyWithDescriptionRelated(where: FilterModelAInput, orderBy: OrderByModelAInput, paginated: PaginationConfigInput): ModelAPaginatedType
  oneToOneRelated: ModelAType
  oneToOneNullableRelated: ModelAType
  oneToOneWithDescriptionRelated: ModelAType
  paginatedManyToManyRelated(where: FilterModelAInput, orderBy: OrderByModelAInput, paginated: PaginationConfigInput): ModelAPaginatedType
  paginatedManyToManyNullableRelated(where: FilterModelAInput, orderBy: OrderByModelAInput, paginated: PaginationConfigInput): ModelAPaginatedType

  """many_to_many_field_with_description"""
  paginatedManyToManyWithDescriptionRelated(where: FilterModelAInput, orderBy: OrderByModelAInput, paginated: PaginationConfigInput): ModelAPaginatedType
  genericRelationRelated: ModelAType
  paginatedForeignKeyBRelated(where: FilterModelBInput, orderBy: OrderByModelBInput, paginated: PaginationConfigInput): ModelBPaginatedType
  oneToOneBRelated: ModelBType
  paginatedManyToManyBRelated(where: FilterModelBInput, orderBy: OrderByModelBInput, paginated: PaginationConfigInput): ModelBPaginatedType
}

"""An enumeration."""
enum SimplecruddalsmodelModelAChoiceFieldNotEditableChoices {
  """A"""
  A

  """B"""
  B
}

type ModelAPaginatedType implements PaginationInterface {
  total: Int
  page: Int
  pages: Int
  hasNext: Boolean
  hasPrev: Boolean
  indexStartObj: Int
  indexEndObj: Int
  objects: [ModelAType!]
}

input FilterModelAInput {
  id: IDFilter
  booleanFieldRequired: BooleanFilter
  booleanFieldNotEditable: BooleanFilter
  booleanFieldNullable: BooleanFilter
  booleanFieldWithDefault: BooleanFilter
  booleanFieldWithDescription: BooleanFilter
  charFieldRequired: StringFilter
  charFieldNotEditable: StringFilter
  charFieldNullable: StringFilter
  charFieldWithDefault: StringFilter
  charFieldWithDescription: StringFilter
  choiceFieldRequired: StringFilter
  choiceFieldNotEditable: StringFilter
  choiceFieldNullable: StringFilter
  choiceFieldWithDefault: StringFilter
  choiceFieldWithDescription: StringFilter
  dateFieldRequired: DateFilter
  dateFieldNotEditable: DateFilter
  dateFieldNullable: DateFilter
  dateFieldWithDefault: DateFilter
  dateFieldWithDescription: DateFilter
  dateTimeFieldRequired: DateTimeFilter
  dateTimeFieldNotEditable: DateTimeFilter
  dateTimeFieldNullable: DateTimeFilter
  dateTimeFieldWithDefault: DateTimeFilter
  dateTimeFieldWithDescription: DateTimeFilter
  timeFieldRequired: TimeFilter
  timeFieldNotEditable: TimeFilter
  timeFieldNullable: TimeFilter
  timeFieldWithDefault: TimeFilter
  timeFieldWithDescription: TimeFilter
  decimalFieldRequired: DecimalFilter
  decimalFieldNotEditable: DecimalFilter
  decimalFieldNullable: DecimalFilter
  decimalFieldWithDefault: DecimalFilter
  decimalFieldWithDescription: DecimalFilter
  durationFieldRequired: DurationFilter
  durationFieldNotEditable: DurationFilter
  durationFieldNullable: DurationFilter
  durationFieldWithDefault: DurationFilter
  durationFieldWithDescription: DurationFilter
  emailFieldRequired: EmailFilter
  emailFieldNotEditable: EmailFilter
  emailFieldNullable: EmailFilter
  emailFieldWithDefault: EmailFilter
  emailFieldWithDescription: EmailFilter
  floatFieldRequired: FloatFilter
  floatFieldNotEditable: FloatFilter
  floatFieldNullable: FloatFilter
  floatFieldWithDefault: FloatFilter
  floatFieldWithDescription: FloatFilter
  integerFieldRequired: IntFilter
  integerFieldNotEditable: IntFilter
  integerFieldNullable: IntFilter
  integerFieldWithDefault: IntFilter
  integerFieldWithDescription: IntFilter
  smallIntegerFieldRequired: IntFilter
  smallIntegerFieldNotEditable: IntFilter
  smallIntegerFieldNullable: IntFilter
  smallIntegerFieldWithDefault: IntFilter
  smallIntegerFieldWithDescription: IntFilter
  positiveIntegerFieldRequired: PositiveIntFilter
  positiveIntegerFieldNotEditable: PositiveIntFilter
  positiveIntegerFieldNullable: PositiveIntFilter
  positiveIntegerFieldWithDefault: PositiveIntFilter
  positiveIntegerFieldWithDescription: PositiveIntFilter
  slugFieldRequired: SlugFilter
  slugFieldNotEditable: SlugFilter
  slugFieldNullable: SlugFilter
  slugFieldWithDefault: SlugFilter
  slugFieldWithDescription: SlugFilter
  textFieldRequired: StringFilter
  textFieldNotEditable: StringFilter
  textFieldNullable: StringFilter
  textFieldWithDefault: StringFilter
  textFieldWithDescription: StringFilter
  urlFieldRequired: URLFilter
  urlFieldNotEditable: URLFilter
  urlFieldNullable: URLFilter
  urlFieldWithDefault: URLFilter
  urlFieldWithDescription: URLFilter
  uuidFieldRequired: UUIDFilter
  uuidFieldNotEditable: UUIDFilter
  uuidFieldNullable: UUIDFilter
  uuidFieldWithDefault: UUIDFilter
  uuidFieldWithDescription: UUIDFilter
  foreignKeyFieldRequired: FilterModelAInput
  foreignKeyFieldNullable: FilterModelAInput
  foreignKeyFieldWithDescription: FilterModelAInput
  foreignKeyFieldWithoutRelatedName: FilterModelAInput
  objectId: PositiveIntFilter
  manyToManyFieldRequired: FilterModelAInput
  manyToManyFieldNullable: FilterModelAInput
  manyToManyFieldWithDescription: FilterModelAInput
  manyToManyFieldWithoutRelatedName: FilterModelAInput
  genericRelationField: FilterModelAInput
  foreignKeyRelated: FilterModelAInput
  foreignKeyNullableRelated: FilterModelAInput
  foreignKeyWithDescriptionRelated: FilterModelAInput
  oneToOneRelated: FilterModelAInput
  oneToOneNullableRelated: FilterModelAInput
  oneToOneWithDescriptionRelated: FilterModelAInput
  manyToManyRelated: FilterModelAInput
  manyToManyNullableRelated: FilterModelAInput
  manyToManyWithDescriptionRelated: FilterModelAInput
  foreignKeyBRelated: FilterModelBInput
  oneToOneBRelated: FilterModelBInput
  manyToManyBRelated: FilterModelBInput
  AND: [FilterModelAInput]
  OR: [FilterModelAInput]
  NOT: FilterModelAInput
}

input DateFilter {
  exact: Date
  iexact: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  in: [Date]
  contains: Date
  icontains: Date
  startswith: Date
  istartswith: Date
  endswith: Date
  iendswith: Date
  range: [Date]
  isnull: Boolean
  regex: String
  iregex: String
  year: Date
  month: Date
  day: Date
  weekDay: Date
  isoWeekDay: Date
  week: Date
  isoYear: Date
  quarter: Date
}

input TimeFilter {
  exact: Time
  iexact: Time
  gt: Time
  gte: Time
  lt: Time
  lte: Time
  in: [Time]
  contains: Time
  icontains: Time
  startswith: Time
  istartswith: Time
  endswith: Time
  iendswith: Time
  range: [Time]
  isnull: Boolean
  regex: String
  iregex: String
  hour: Time
  minute: Time
  second: Time
}

input DecimalFilter {
  exact: Decimal
  iexact: Decimal
  gt: Decimal
  gte: Decimal
  lt: Decimal
  lte: Decimal
  in: [Decimal]
  contains: Decimal
  icontains: Decimal
  startswith: Decimal
  istartswith: Decimal
  endswith: Decimal
  iendswith: Decimal
  range: [Decimal]
  isnull: Boolean
  regex: String
  iregex: String
}

input DurationFilter {
  exact: Duration
  iexact: Duration
  gt: Duration
  gte: Duration
  lt: Duration
  lte: Duration
  in: [Duration]
  contains: Duration
  icontains: Duration
  startswith: Duration
  istartswith: Duration
  endswith: Duration
  iendswith: Duration
  range: [Duration]
  isnull: Boolean
  regex: String
  iregex: String
}

input EmailFilter {
  exact: Email
  iexact: Email
  gt: Email
  gte: Email
  lt: Email
  lte: Email
  in: [Email]
  contains: Email
  icontains: Email
  startswith: Email
  istartswith: Email
  endswith: Email
  iendswith: Email
  range: [Email]
  isnull: Boolean
  regex: String
  iregex: String
}

input FloatFilter {
  exact: Float
  iexact: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float]
  contains: Float
  icontains: Float
  startswith: Float
  istartswith: Float
  endswith: Float
  iendswith: Float
  range: [Float]
  isnull: Boolean
  regex: String
  iregex: String
}

input PositiveIntFilter {
  exact: PositiveInt
  iexact: PositiveInt
  gt: PositiveInt
  gte: PositiveInt
  lt: PositiveInt
  lte: PositiveInt
  in: [PositiveInt]
  contains: PositiveInt
  icontains: PositiveInt
  startswith: PositiveInt
  istartswith: PositiveInt
  endswith: PositiveInt
  iendswith: PositiveInt
  range: [PositiveInt]
  isnull: Boolean
  regex: String
  iregex: String
}

input SlugFilter {
  exact: Slug
  iexact: Slug
  gt: Slug
  gte: Slug
  lt: Slug
  lte: Slug
  in: [Slug]
  contains: Slug
  icontains: Slug
  startswith: Slug
  istartswith: Slug
  endswith: Slug
  iendswith: Slug
  range: [Slug]
  isnull: Boolean
  regex: String
  iregex: String
}

input URLFilter {
  exact: URL
  iexact: URL
  gt: URL
  gte: URL
  lt: URL
  lte: URL
  in: [URL]
  contains: URL
  icontains: URL
  startswith: URL
  istartswith: URL
  endswith: URL
  iendswith: URL
  range: [URL]
  isnull: Boolean
  regex: String
  iregex: String
}

input UUIDFilter {
  exact: UUID
  iexact: UUID
  gt: UUID
  gte: UUID
  lt: UUID
  lte: UUID
  in: [UUID]
  contains: UUID
  icontains: UUID
  startswith: UUID
  istartswith: UUID
  endswith: UUID
  iendswith: UUID
  range: [UUID]
  isnull: Boolean
  regex: String
  iregex: String
}

input FilterModelBInput {
  id: IDFilter
  foreignKeyField: FilterModelAInput
  oneToOneField: FilterModelAInput
  manyToManyField: FilterModelAInput
  AND: [FilterModelBInput]
  OR: [FilterModelBInput]
  NOT: FilterModelBInput
}

input OrderByModelAInput {
  id: OrderEnum
  booleanFieldRequired: OrderEnum
  booleanFieldNotEditable: OrderEnum
  booleanFieldNullable: OrderEnum
  booleanFieldWithDefault: OrderEnum
  booleanFieldWithDescription: OrderEnum
  charFieldRequired: OrderStringEnum
  charFieldNotEditable: OrderStringEnum
  charFieldNullable: OrderStringEnum
  charFieldWithDefault: OrderStringEnum
  charFieldWithDescription: OrderStringEnum
  choiceFieldRequired: OrderStringEnum
  choiceFieldNotEditable: OrderStringEnum
  choiceFieldNullable: OrderStringEnum
  choiceFieldWithDefault: OrderStringEnum
  choiceFieldWithDescription: OrderStringEnum
  dateFieldRequired: OrderEnum
  dateFieldNotEditable: OrderEnum
  dateFieldNullable: OrderEnum
  dateFieldWithDefault: OrderEnum
  dateFieldWithDescription: OrderEnum
  dateTimeFieldRequired: OrderEnum
  dateTimeFieldNotEditable: OrderEnum
  dateTimeFieldNullable: OrderEnum
  dateTimeFieldWithDefault: OrderEnum
  dateTimeFieldWithDescription: OrderEnum
  timeFieldRequired: OrderEnum
  timeFieldNotEditable: OrderEnum
  timeFieldNullable: OrderEnum
  timeFieldWithDefault: OrderEnum
  timeFieldWithDescription: OrderEnum
  decimalFieldRequired: OrderEnum
  decimalFieldNotEditable: OrderEnum
  decimalFieldNullable: OrderEnum
  decimalFieldWithDefault: OrderEnum
  decimalFieldWithDescription: OrderEnum
  durationFieldRequired: OrderEnum
  durationFieldNotEditable: OrderEnum
  durationFieldNullable: OrderEnum
  durationFieldWithDefault: OrderEnum
  durationFieldWithDescription: OrderEnum
  emailFieldRequired: OrderStringEnum
  emailFieldNotEditable: OrderStringEnum
  emailFieldNullable: OrderStringEnum
  emailFieldWithDefault: OrderStringEnum
  emailFieldWithDescription: OrderStringEnum
  floatFieldRequired: OrderEnum
  floatFieldNotEditable: OrderEnum
  floatFieldNullable: OrderEnum
  floatFieldWithDefault: OrderEnum
  floatFieldWithDescription: OrderEnum
  integerFieldRequired: OrderEnum
  integerFieldNotEditable: OrderEnum
  integerFieldNullable: OrderEnum
  integerFieldWithDefault: OrderEnum
  integerFieldWithDescription: OrderEnum
  smallIntegerFieldRequired: OrderEnum
  smallIntegerFieldNotEditable: OrderEnum
  smallIntegerFieldNullable: OrderEnum
  smallIntegerFieldWithDefault: OrderEnum
  smallIntegerFieldWithDescription: OrderEnum
  positiveIntegerFieldRequired: OrderEnum
  positiveIntegerFieldNotEditable: OrderEnum
  positiveIntegerFieldNullable: OrderEnum
  positiveIntegerFieldWithDefault: OrderEnum
  positiveIntegerFieldWithDescription: OrderEnum
  slugFieldRequired: OrderStringEnum
  slugFieldNotEditable: OrderStringEnum
  slugFieldNullable: OrderStringEnum
  slugFieldWithDefault: OrderStringEnum
  slugFieldWithDescription: OrderStringEnum
  textFieldRequired: OrderStringEnum
  textFieldNotEditable: OrderStringEnum
  textFieldNullable: OrderStringEnum
  textFieldWithDefault: OrderStringEnum
  textFieldWithDescription: OrderStringEnum
  urlFieldRequired: OrderStringEnum
  urlFieldNotEditable: OrderStringEnum
  urlFieldNullable: OrderStringEnum
  urlFieldWithDefault: OrderStringEnum
  urlFieldWithDescription: OrderStringEnum
  uuidFieldRequired: OrderEnum
  uuidFieldNotEditable: OrderEnum
  uuidFieldNullable: OrderEnum
  uuidFieldWithDefault: OrderEnum
  uuidFieldWithDescription: OrderEnum
  foreignKeyFieldRequired: OrderByModelAInput
  foreignKeyFieldNullable: OrderByModelAInput
  foreignKeyFieldWithDescription: OrderByModelAInput
  foreignKeyFieldWithoutRelatedName: OrderByModelAInput
  objectId: OrderEnum
  oneToOneRelated: OrderByModelAInput
  oneToOneNullableRelated: OrderByModelAInput
  oneToOneWithDescriptionRelated: OrderByModelAInput
  oneToOneBRelated: OrderByModelBInput
}

input OrderByModelBInput {
  id: OrderEnum
  foreignKeyField: OrderByModelAInput
  oneToOneField: OrderByModelAInput
}

union ModelAGenericForeignKeyFieldUnionType = ModelAType | ModelBType | ModelCType | ModelDType | ModelEType

type ModelBPaginatedType implements PaginationInterface {
  total: Int
  page: Int
  pages: Int
  hasNext: Boolean
  hasPrev: Boolean
  indexStartObj: Int
  indexEndObj: Int
  objects: [ModelBType!]
}

type Mutation {
  createModelEs(input: [CreateModelEInput!]): CreateModelEsPayload
  updateModelEs(input: [UpdateModelEInput!]): UpdateModelEsPayload
  activateModelEs(where: FilterModelEInput!): ActivateModelEsPayload
  deactivateModelEs(where: FilterModelEInput!): DeactivateModelEsPayload
  deleteModelEs(where: FilterModelEInput!): DeleteModelEsPayload
  createModelDs(input: [CreateModelDInput!]): CreateModelDsPayload
  updateModelDs(input: [UpdateModelDInput!]): UpdateModelDsPayload
  activateModelDs(where: FilterModelDInput!): ActivateModelDsPayload
  deactivateModelDs(where: FilterModelDInput!): DeactivateModelDsPayload
  deleteModelDs(where: FilterModelDInput!): DeleteModelDsPayload
  createModelCs(input: [CreateModelCInput!]): CreateModelCsPayload
  updateModelCs(input: [UpdateModelCInput!]): UpdateModelCsPayload
  activateModelCs(where: FilterModelCInput!): ActivateModelCsPayload
  deactivateModelCs(where: FilterModelCInput!): DeactivateModelCsPayload
  deleteModelCs(where: FilterModelCInput!): DeleteModelCsPayload
  createModelBs(input: [CreateModelBInput!]): CreateModelBsPayload
  updateModelBs(input: [UpdateModelBInput!]): UpdateModelBsPayload
  activateModelBs(where: FilterModelBInput!): ActivateModelBsPayload
  deactivateModelBs(where: FilterModelBInput!): DeactivateModelBsPayload
  deleteModelBs(where: FilterModelBInput!): DeleteModelBsPayload
  createModelAs(input: [CreateModelAInput!]): CreateModelAsPayload
  updateModelAs(input: [UpdateModelAInput!]): UpdateModelAsPayload
  activateModelAs(where: FilterModelAInput!): ActivateModelAsPayload
  deactivateModelAs(where: FilterModelAInput!): DeactivateModelAsPayload
  deleteModelAs(where: FilterModelAInput!): DeleteModelAsPayload
}

type CreateModelEsPayload {
  objects: [ModelEType]
  errorsReport: [ErrorCollectionType]
}

type ErrorCollectionType {
  objectPosition: String
  errors: [ErrorType]
}

type ErrorType {
  field: String!
  messages: [String!]!
}

input CreateModelEInput {
  foreignKeyFieldDeep: ID
}

type UpdateModelEsPayload {
  objects: [ModelEType]
  errorsReport: [ErrorCollectionType]
}

input UpdateModelEInput {
  id: ID!
  foreignKeyFieldDeep: ID
}

type ActivateModelEsPayload {
  objects: [ModelEType]
  errorsReport: [ErrorCollectionType]
}

type DeactivateModelEsPayload {
  objects: [ModelEType]
  errorsReport: [ErrorCollectionType]
}

type DeleteModelEsPayload {
  objects: [ModelEType]
  errorsReport: [ErrorCollectionType]
  success: Boolean
}

type CreateModelDsPayload {
  objects: [ModelDType]
  errorsReport: [ErrorCollectionType]
}

input CreateModelDInput {
  foreignKeyField: ID
}

type UpdateModelDsPayload {
  objects: [ModelDType]
  errorsReport: [ErrorCollectionType]
}

input UpdateModelDInput {
  id: ID!
  foreignKeyField: ID
}

type ActivateModelDsPayload {
  objects: [ModelDType]
  errorsReport: [ErrorCollectionType]
}

type DeactivateModelDsPayload {
  objects: [ModelDType]
  errorsReport: [ErrorCollectionType]
}

type DeleteModelDsPayload {
  objects: [ModelDType]
  errorsReport: [ErrorCollectionType]
  success: Boolean
}

type CreateModelCsPayload {
  objects: [ModelCType]
  errorsReport: [ErrorCollectionType]
}

input CreateModelCInput {
  charField: String!
  integerField: Int = 1
  booleanField: Boolean
  dateTimeField: DateTime
  jsonField: JSONString
  fileField: Upload
  oneToOneField: ID
  isActive: Boolean = true
  manyToManyField: [ID]
}

"""
Create scalar that ignores normal serialization/deserialization, since
that will be handled by the multipart request spec
"""
scalar Upload

type UpdateModelCsPayload {
  objects: [ModelCType]
  errorsReport: [ErrorCollectionType]
}

input UpdateModelCInput {
  id: ID!
  charField: String
  integerField: Int
  booleanField: Boolean
  dateTimeField: DateTime
  jsonField: JSONString
  fileField: Upload
  oneToOneField: ID
  isActive: Boolean
  manyToManyField: [ID]
}

type ActivateModelCsPayload {
  objects: [ModelCType]
  errorsReport: [ErrorCollectionType]
}

type DeactivateModelCsPayload {
  objects: [ModelCType]
  errorsReport: [ErrorCollectionType]
}

type DeleteModelCsPayload {
  objects: [ModelCType]
  errorsReport: [ErrorCollectionType]
  success: Boolean
}

type CreateModelBsPayload {
  objects: [ModelBType]
  errorsReport: [ErrorCollectionType]
}

input CreateModelBInput {
  foreignKeyField: ID!
  oneToOneField: ID!
  manyToManyField: [ID]!
}

type UpdateModelBsPayload {
  objects: [ModelBType]
  errorsReport: [ErrorCollectionType]
}

input UpdateModelBInput {
  id: ID!
  foreignKeyField: ID
  oneToOneField: ID
  manyToManyField: [ID]
}

type ActivateModelBsPayload {
  objects: [ModelBType]
  errorsReport: [ErrorCollectionType]
}

type DeactivateModelBsPayload {
  objects: [ModelBType]
  errorsReport: [ErrorCollectionType]
}

type DeleteModelBsPayload {
  objects: [ModelBType]
  errorsReport: [ErrorCollectionType]
  success: Boolean
}

type CreateModelAsPayload {
  objects: [ModelAType]
  errorsReport: [ErrorCollectionType]
}

input CreateModelAInput {
  binaryFieldRequired: Binary!
  binaryFieldNullable: Binary
  binaryFieldWithDefault: Binary = "CA=="

  """binary_field_with_description"""
  binaryFieldWithDescription: Binary!
  booleanFieldRequired: Boolean!
  booleanFieldNullable: Boolean
  booleanFieldWithDefault: Boolean = true

  """boolean_field_with_description"""
  booleanFieldWithDescription: Boolean!
  charFieldRequired: String!
  charFieldNullable: String
  charFieldWithDefault: String = "char_field_with_default"

  """char_field_with_description"""
  charFieldWithDescription: String!
  choiceFieldRequired: SimplecruddalsmodelModelAChoiceFieldRequiredChoices!
  choiceFieldNullable: SimplecruddalsmodelModelAChoiceFieldNullableChoices
  choiceFieldWithDefault: SimplecruddalsmodelModelAChoiceFieldWithDefaultChoices = A

  """choice_field_with_description"""
  choiceFieldWithDescription: SimplecruddalsmodelModelAChoiceFieldWithDescriptionChoices!
  dateFieldRequired: Date!
  dateFieldNullable: Date

  """date_field_with_description"""
  dateFieldWithDescription: Date!
  dateTimeFieldRequired: DateTime!
  dateTimeFieldNullable: DateTime

  """date_time_field_with_description"""
  dateTimeFieldWithDescription: DateTime!
  timeFieldRequired: Time!
  timeFieldNullable: Time

  """time_field_with_description"""
  timeFieldWithDescription: Time!
  decimalFieldRequired: Decimal!
  decimalFieldNullable: Decimal
  decimalFieldWithDefault: Decimal = "0"

  """decimal_field_with_description"""
  decimalFieldWithDescription: Decimal!
  durationFieldRequired: Duration!
  durationFieldNullable: Duration
  durationFieldWithDefault: Duration

  """duration_field_with_description"""
  durationFieldWithDescription: Duration!
  emailFieldRequired: Email!
  emailFieldNullable: Email
  emailFieldWithDefault: Email = "emailField@withDefault.com"

  """email_field_with_description"""
  emailFieldWithDescription: Email!
  floatFieldRequired: Float!
  floatFieldNullable: Float
  floatFieldWithDefault: Float = 0

  """float_field_with_description"""
  floatFieldWithDescription: Float!
  integerFieldRequired: Int!
  integerFieldNullable: Int
  integerFieldWithDefault: Int = 0

  """integer_field_with_description"""
  integerFieldWithDescription: Int!
  smallIntegerFieldRequired: Int!
  smallIntegerFieldNullable: Int
  smallIntegerFieldWithDefault: Int = 0

  """small_integer_field_with_description"""
  smallIntegerFieldWithDescription: Int!
  positiveIntegerFieldRequired: PositiveInt!
  positiveIntegerFieldNullable: PositiveInt
  positiveIntegerFieldWithDefault: PositiveInt = 0

  """positive_integer_field_with_description"""
  positiveIntegerFieldWithDescription: PositiveInt!
  slugFieldRequired: Slug!
  slugFieldNullable: Slug
  slugFieldWithDefault: Slug = "slug_field_with_default"

  """slug_field_with_description"""
  slugFieldWithDescription: Slug!
  textFieldRequired: String!
  textFieldNullable: String
  textFieldWithDefault: String = "text_field_with_default"

  """text_field_with_description"""
  textFieldWithDescription: String!
  urlFieldRequired: URL!
  urlFieldNullable: URL
  urlFieldWithDefault: URL = "https://url_field_with_default.com"

  """url_field_with_description"""
  urlFieldWithDescription: URL!
  uuidFieldRequired: UUID!
  uuidFieldNullable: UUID
  uuidFieldWithDefault: UUID

  """uuid_field_with_description"""
  uuidFieldWithDescription: UUID!
  foreignKeyFieldRequired: ID!
  foreignKeyFieldNullable: ID

  """foreign_key_field_with_description"""
  foreignKeyFieldWithDescription: ID!
  foreignKeyFieldWithoutRelatedName: ID!
  oneToOneFieldRequired: ID!
  oneToOneFieldNullable: ID

  """one_to_one_field_with_description"""
  oneToOneFieldWithDescription: ID!
  oneToOneFieldWithoutRelatedName: ID!

  """The content type"""
  contentType: ID

  """The object id"""
  objectId: PositiveInt
  manyToManyFieldRequired: [ID]!
  manyToManyFieldNullable: [ID]

  """many_to_many_field_with_description"""
  manyToManyFieldWithDescription: [ID]!
  manyToManyFieldWithoutRelatedName: [ID]!
}

type UpdateModelAsPayload {
  objects: [ModelAType]
  errorsReport: [ErrorCollectionType]
}

input UpdateModelAInput {
  id: ID!
  binaryFieldRequired: Binary
  binaryFieldNullable: Binary
  binaryFieldWithDefault: Binary

  """binary_field_with_description"""
  binaryFieldWithDescription: Binary
  booleanFieldRequired: Boolean
  booleanFieldNullable: Boolean
  booleanFieldWithDefault: Boolean

  """boolean_field_with_description"""
  booleanFieldWithDescription: Boolean
  charFieldRequired: String
  charFieldNullable: String
  charFieldWithDefault: String

  """char_field_with_description"""
  charFieldWithDescription: String
  choiceFieldRequired: SimplecruddalsmodelModelAChoiceFieldRequiredChoices
  choiceFieldNullable: SimplecruddalsmodelModelAChoiceFieldNullableChoices
  choiceFieldWithDefault: SimplecruddalsmodelModelAChoiceFieldWithDefaultChoices

  """choice_field_with_description"""
  choiceFieldWithDescription: SimplecruddalsmodelModelAChoiceFieldWithDescriptionChoices
  dateFieldRequired: Date
  dateFieldNullable: Date

  """date_field_with_description"""
  dateFieldWithDescription: Date
  dateTimeFieldRequired: DateTime
  dateTimeFieldNullable: DateTime

  """date_time_field_with_description"""
  dateTimeFieldWithDescription: DateTime
  timeFieldRequired: Time
  timeFieldNullable: Time

  """time_field_with_description"""
  timeFieldWithDescription: Time
  decimalFieldRequired: Decimal
  decimalFieldNullable: Decimal
  decimalFieldWithDefault: Decimal

  """decimal_field_with_description"""
  decimalFieldWithDescription: Decimal
  durationFieldRequired: Duration
  durationFieldNullable: Duration
  durationFieldWithDefault: Duration

  """duration_field_with_description"""
  durationFieldWithDescription: Duration
  emailFieldRequired: Email
  emailFieldNullable: Email
  emailFieldWithDefault: Email

  """email_field_with_description"""
  emailFieldWithDescription: Email
  floatFieldRequired: Float
  floatFieldNullable: Float
  floatFieldWithDefault: Float

  """float_field_with_description"""
  floatFieldWithDescription: Float
  integerFieldRequired: Int
  integerFieldNullable: Int
  integerFieldWithDefault: Int

  """integer_field_with_description"""
  integerFieldWithDescription: Int
  smallIntegerFieldRequired: Int
  smallIntegerFieldNullable: Int
  smallIntegerFieldWithDefault: Int

  """small_integer_field_with_description"""
  smallIntegerFieldWithDescription: Int
  positiveIntegerFieldRequired: PositiveInt
  positiveIntegerFieldNullable: PositiveInt
  positiveIntegerFieldWithDefault: PositiveInt

  """positive_integer_field_with_description"""
  positiveIntegerFieldWithDescription: PositiveInt
  slugFieldRequired: Slug
  slugFieldNullable: Slug
  slugFieldWithDefault: Slug

  """slug_field_with_description"""
  slugFieldWithDescription: Slug
  textFieldRequired: String
  textFieldNullable: String
  textFieldWithDefault: String

  """text_field_with_description"""
  textFieldWithDescription: String
  urlFieldRequired: URL
  urlFieldNullable: URL
  urlFieldWithDefault: URL

  """url_field_with_description"""
  urlFieldWithDescription: URL
  uuidFieldRequired: UUID
  uuidFieldNullable: UUID
  uuidFieldWithDefault: UUID

  """uuid_field_with_description"""
  uuidFieldWithDescription: UUID
  foreignKeyFieldRequired: ID
  foreignKeyFieldNullable: ID

  """foreign_key_field_with_description"""
  foreignKeyFieldWithDescription: ID
  foreignKeyFieldWithoutRelatedName: ID
  oneToOneFieldRequired: ID
  oneToOneFieldNullable: ID

  """one_to_one_field_with_description"""
  oneToOneFieldWithDescription: ID
  oneToOneFieldWithoutRelatedName: ID

  """The content type"""
  contentType: ID

  """The object id"""
  objectId: PositiveInt
  manyToManyFieldRequired: [ID]
  manyToManyFieldNullable: [ID]

  """many_to_many_field_with_description"""
  manyToManyFieldWithDescription: [ID]
  manyToManyFieldWithoutRelatedName: [ID]
}

type ActivateModelAsPayload {
  objects: [ModelAType]
  errorsReport: [ErrorCollectionType]
}

type DeactivateModelAsPayload {
  objects: [ModelAType]
  errorsReport: [ErrorCollectionType]
}

type DeleteModelAsPayload {
  objects: [ModelAType]
  errorsReport: [ErrorCollectionType]
  success: Boolean
}
