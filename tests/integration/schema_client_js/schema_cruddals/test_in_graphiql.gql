#region ============= SIMPLECRUDDALSMODEL

#region ============= MODELA

query readModelA($where: FilterModelAInput! ) {
    readModelA(where: $where ) {
        id
    }
}

query listModelAs {
    listModelAs {
        id
    }
}

query searchModelAs($where: FilterModelAInput $orderBy: OrderByModelAInput $paginated: PaginationConfigInput ) {
    searchModelAs(where: $where orderBy: $orderBy paginated: $paginated ) {
        total
        page
        pages
        hasNext
        hasPrev
        indexStartObj
        indexEndObj
        objects {
            id
        }
    }
}

mutation createModelAs($input: [CreateModelAInput!] ) {
    createModelAs(input: $input ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation updateModelAs($input: [UpdateModelAInput!] ) {
    updateModelAs(input: $input ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation deleteModelAs($where: FilterModelAInput! ) {
    deleteModelAs(where: $where ) {
        success
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation deactivateModelAs($where: FilterModelAInput! ) {
    deactivateModelAs(where: $where ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation activateModelAs($where: FilterModelAInput! ) {
    activateModelAs(where: $where ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

#endregion


#region ============= MODELB

query readModelB($where: FilterModelBInput! ) {
    readModelB(where: $where ) {
        id
    }
}

query listModelBs {
    listModelBs {
        id
    }
}

query searchModelBs($where: FilterModelBInput $orderBy: OrderByModelBInput $paginated: PaginationConfigInput ) {
    searchModelBs(where: $where orderBy: $orderBy paginated: $paginated ) {
        total
        page
        pages
        hasNext
        hasPrev
        indexStartObj
        indexEndObj
        objects {
            id
        }
    }
}

mutation createModelBs($input: [CreateModelBInput!] ) {
    createModelBs(input: $input ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation updateModelBs($input: [UpdateModelBInput!] ) {
    updateModelBs(input: $input ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation deleteModelBs($where: FilterModelBInput! ) {
    deleteModelBs(where: $where ) {
        success
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation deactivateModelBs($where: FilterModelBInput! ) {
    deactivateModelBs(where: $where ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation activateModelBs($where: FilterModelBInput! ) {
    activateModelBs(where: $where ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

#endregion


#region ============= MODELC

query readModelC($where: FilterModelCInput! ) {
    readModelC(where: $where ) {
        id
    }
}

query listModelCs {
    listModelCs {
        id
    }
}

query searchModelCs($where: FilterModelCInput $orderBy: OrderByModelCInput $paginated: PaginationConfigInput ) {
    searchModelCs(where: $where orderBy: $orderBy paginated: $paginated ) {
        total
        page
        pages
        hasNext
        hasPrev
        indexStartObj
        indexEndObj
        objects {
            id
        }
    }
}

mutation createModelCs($input: [CreateModelCInput!] ) {
    createModelCs(input: $input ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation updateModelCs($input: [UpdateModelCInput!] ) {
    updateModelCs(input: $input ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation deleteModelCs($where: FilterModelCInput! ) {
    deleteModelCs(where: $where ) {
        success
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation deactivateModelCs($where: FilterModelCInput! ) {
    deactivateModelCs(where: $where ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation activateModelCs($where: FilterModelCInput! ) {
    activateModelCs(where: $where ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

#endregion


#region ============= MODELD

query readModelD($where: FilterModelDInput! ) {
    readModelD(where: $where ) {
        id
    }
}

query listModelDs {
    listModelDs {
        id
    }
}

query searchModelDs($where: FilterModelDInput $orderBy: OrderByModelDInput $paginated: PaginationConfigInput ) {
    searchModelDs(where: $where orderBy: $orderBy paginated: $paginated ) {
        total
        page
        pages
        hasNext
        hasPrev
        indexStartObj
        indexEndObj
        objects {
            id
        }
    }
}

mutation createModelDs($input: [CreateModelDInput!] ) {
    createModelDs(input: $input ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation updateModelDs($input: [UpdateModelDInput!] ) {
    updateModelDs(input: $input ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation deleteModelDs($where: FilterModelDInput! ) {
    deleteModelDs(where: $where ) {
        success
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation deactivateModelDs($where: FilterModelDInput! ) {
    deactivateModelDs(where: $where ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation activateModelDs($where: FilterModelDInput! ) {
    activateModelDs(where: $where ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

#endregion


#region ============= MODELE

query readModelE($where: FilterModelEInput! ) {
    readModelE(where: $where ) {
        id
    }
}

query listModelEs {
    listModelEs {
        id
    }
}

query searchModelEs($where: FilterModelEInput $orderBy: OrderByModelEInput $paginated: PaginationConfigInput ) {
    searchModelEs(where: $where orderBy: $orderBy paginated: $paginated ) {
        total
        page
        pages
        hasNext
        hasPrev
        indexStartObj
        indexEndObj
        objects {
            id
        }
    }
}

mutation createModelEs($input: [CreateModelEInput!] ) {
    createModelEs(input: $input ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation updateModelEs($input: [UpdateModelEInput!] ) {
    updateModelEs(input: $input ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation deleteModelEs($where: FilterModelEInput! ) {
    deleteModelEs(where: $where ) {
        success
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation deactivateModelEs($where: FilterModelEInput! ) {
    deactivateModelEs(where: $where ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

mutation activateModelEs($where: FilterModelEInput! ) {
    activateModelEs(where: $where ) {
        objects {
            id
        }
        errorsReport {
            objectPosition
            errors {
                field
                messages
            }
        }
    }
}

#endregion


#endregion

#region ============= ADMIN

#region ============= LOGENTRY

#endregion


#endregion

#region ============= AUTH

#region ============= PERMISSION

#endregion


#region ============= GROUP

#endregion


#region ============= USER

#endregion


#endregion

#region ============= CONTENTTYPES

#region ============= CONTENTTYPE

#endregion


#endregion

#region ============= SESSIONS

#region ============= SESSION

#endregion


#endregion

#region ============= MESSAGES

#endregion

#region ============= STATICFILES

#endregion

#region ============= GRAPHENE_DJANGO

#endregion
